{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Current_time": {
                "inputs": {},
                "kind": "CurrentTime",
                "runAfter": {},
                "type": "Expression"
            },
            "HTTP_-_Download_traffic_report": {
                "inputs": {
                    "authentication": {
                        "password": "33cf70031f8f408a985cef9bfa68b1cc2",
                        "type": "Basic",
                        "username": "api_14ca2dc36bd90"
                    },
                    "headers": {
                        "accept": "application/json",
                        "accept-encoding": "gzip, deflate, br",
                        "content-type": "application/json"
                    },
                    "method": "GET",
                    "uri": "https://scp4.illum.io/api/v2@{variables('retrieveJobID')}/download"
                },
                "runAfter": {
                    "Until_the_job_completed": [
                        "Succeeded"
                    ]
                },
                "runtimeConfiguration": {
                    "contentTransfer": {
                        "transferMode": "Chunked"
                    }
                },
                "type": "Http"
            },
            "HTTP_-_POST_-_Create_Async_Query_to_retrieve_trafficdata_for_last_hour": {
                "inputs": {
                    "authentication": {
                        "password": "33cf70031f8f408a985cef9bfa68b1cc2",
                        "type": "Basic",
                        "username": "api_14ca2dc36bd90"
                    },
                    "body": {
                        "boundary_decisions": [],
                        "destinations": {
                            "exclude": [
                                {
                                    "transmission": "multicast"
                                },
                                {
                                    "transmission": "broadcast"
                                }
                            ],
                            "include": [
                                []
                            ]
                        },
                        "end_date": "@{body('Current_time')}",
                        "max_results": 200000,
                        "policy_decisions": [],
                        "query_name": "UI_EXPLORER_QUERY_Consumer Or Provider Exclude: Multicast, Broadcast Services Name is not: 137 138 UDP 139 UDP Time: Last 1 Hours",
                        "services": {
                            "exclude": [],
                            "include": []
                        },
                        "sources": {
                            "exclude": [],
                            "include": [
                                []
                            ]
                        },
                        "sources_destinations_query_op": "and",
                        "start_date": "@{body('Subtract_from_time_-_last_1_hour_from_the_current_time')}"
                    },
                    "headers": {
                        "accept": "application/json",
                        "content-type": "application/json"
                    },
                    "method": "POST",
                    "uri": "https://scp4.illum.io/api/v2/orgs/13/traffic_flows/async_queries"
                },
                "runAfter": {
                    "Initialize_variable_-_Placeholder_for_Query_Job_status": [
                        "Succeeded"
                    ]
                },
                "type": "Http"
            },
            "Initialize_variable_-_Placeholder_for_Async_Query": {
                "inputs": {
                    "variables": [
                        {
                            "name": "bodyAsyncQueries",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Subtract_from_time_-_last_1_hour_from_the_current_time": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_-_Placeholder_for_Query_Job_ID": {
                "inputs": {
                    "variables": [
                        {
                            "name": "retrieveJobID",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_-_Placeholder_for_Async_Query": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_variable_-_Placeholder_for_Query_Job_status": {
                "inputs": {
                    "variables": [
                        {
                            "name": "jobStatus",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_-_Placeholder_for_Query_Job_ID": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_JSON_-_HTTP_POST_response": {
                "inputs": {
                    "content": "@variables('bodyAsyncQueries')",
                    "schema": {
                        "properties": {
                            "body": {
                                "properties": {
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "href": {
                                        "type": "string"
                                    },
                                    "query_parameters": {
                                        "properties": {
                                            "boundary_decisions": {
                                                "type": "array"
                                            },
                                            "destinations": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "items": {
                                                            "type": "array"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "end_date": {
                                                "type": "string"
                                            },
                                            "max_results": {
                                                "type": "integer"
                                            },
                                            "policy_decisions": {
                                                "type": "array"
                                            },
                                            "query_name": {
                                                "type": "string"
                                            },
                                            "services": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "sources": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "items": {
                                                            "type": "array"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "sources_destinations_query_op": {
                                                "type": "string"
                                            },
                                            "start_date": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Set_variable_-_Store_HTTP_body_in_the_Placeholder_of_Async_Query": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "Send_Data": {
                "inputs": {
                    "body": "@{body('HTTP_-_Download_traffic_report')}",
                    "headers": {
                        "Log-Type": "illumio_traffic_CL"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/api/logs"
                },
                "runAfter": {
                    "HTTP_-_Download_traffic_report": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "Set_variable_-_Store_Async_Query_job_ID": {
                "inputs": {
                    "name": "retrieveJobID",
                    "value": "@body('Parse_JSON_-_HTTP_POST_response')?['href']"
                },
                "runAfter": {
                    "Parse_JSON_-_HTTP_POST_response": [
                        "Succeeded"
                    ]
                },
                "type": "SetVariable"
            },
            "Set_variable_-_Store_HTTP_body_in_the_Placeholder_of_Async_Query": {
                "inputs": {
                    "name": "bodyAsyncQueries",
                    "value": "@{body('HTTP_-_POST_-_Create_Async_Query_to_retrieve_trafficdata_for_last_hour')}"
                },
                "runAfter": {
                    "HTTP_-_POST_-_Create_Async_Query_to_retrieve_trafficdata_for_last_hour": [
                        "Succeeded"
                    ]
                },
                "type": "SetVariable"
            },
            "Subtract_from_time_-_last_1_hour_from_the_current_time": {
                "inputs": {
                    "baseTime": "@body('Current_time')",
                    "interval": 10,
                    "timeUnit": "Minute"
                },
                "kind": "SubtractFromTime",
                "runAfter": {
                    "Current_time": [
                        "Succeeded"
                    ]
                },
                "type": "Expression"
            },
            "Until_the_job_completed": {
                "actions": {
                    "Delay_2_secs": {
                        "inputs": {
                            "interval": {
                                "count": 2,
                                "unit": "Second"
                            }
                        },
                        "runAfter": {
                            "HTTP_-_GET_Async_Query_job_status": [
                                "Succeeded"
                            ]
                        },
                        "type": "Wait"
                    },
                    "HTTP_-_GET_Async_Query_job_status": {
                        "inputs": {
                            "authentication": {
                                "password": "33cf70031f8f408a985cef9bfa68b1cc2",
                                "type": "Basic",
                                "username": "api_14ca2dc36bd90"
                            },
                            "headers": {
                                "accept": "application/json",
                                "content-type": "application/json"
                            },
                            "method": "GET",
                            "uri": "https://scp4.illum.io/api/v2@{variables('retrieveJobID')}"
                        },
                        "runAfter": {},
                        "type": "Http"
                    },
                    "Parse_JSON_-_HTTP_job_status": {
                        "inputs": {
                            "content": "@variables('bodyAsyncQueries')",
                            "schema": {
                                "properties": {
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "created_by": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "flows_count": {
                                        "type": "integer"
                                    },
                                    "href": {
                                        "type": "string"
                                    },
                                    "matches_count": {
                                        "type": "integer"
                                    },
                                    "query_parameters": {
                                        "properties": {
                                            "destinations": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "items": {
                                                            "type": "array"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "end_date": {
                                                "type": "string"
                                            },
                                            "max_results": {
                                                "type": "integer"
                                            },
                                            "policy_decisions": {
                                                "type": "array"
                                            },
                                            "query_name": {
                                                "type": "string"
                                            },
                                            "services": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "sources": {
                                                "properties": {
                                                    "exclude": {
                                                        "type": "array"
                                                    },
                                                    "include": {
                                                        "items": {
                                                            "type": "array"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "sources_destinations_query_op": {
                                                "type": "string"
                                            },
                                            "start_date": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "result": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "runAfter": {
                            "Set_variable_-_Store_HTTP_response_body": [
                                "Succeeded"
                            ]
                        },
                        "type": "ParseJson"
                    },
                    "Set_variable_-_Store_HTTP_response_body": {
                        "inputs": {
                            "name": "bodyAsyncQueries",
                            "value": "@{body('HTTP_-_GET_Async_Query_job_status')}"
                        },
                        "runAfter": {
                            "Delay_2_secs": [
                                "Succeeded"
                            ]
                        },
                        "type": "SetVariable"
                    },
                    "Set_variable_-_Store_the_job_status": {
                        "inputs": {
                            "name": "jobStatus",
                            "value": "@body('Parse_JSON_-_HTTP_job_status')?['status']"
                        },
                        "runAfter": {
                            "Parse_JSON_-_HTTP_job_status": [
                                "Succeeded"
                            ]
                        },
                        "type": "SetVariable"
                    }
                },
                "expression": "@equals(variables('jobStatus'), 'completed')",
                "limit": {
                    "count": 60,
                    "timeout": "PT1H"
                },
                "runAfter": {
                    "Set_variable_-_Store_Async_Query_job_ID": [
                        "Succeeded"
                    ]
                },
                "type": "Until"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Recurrence_-_1_hour": {
                "evaluatedRecurrence": {
                    "frequency": "Hour",
                    "interval": 1
                },
                "recurrence": {
                    "frequency": "Hour",
                    "interval": 1
                },
                "type": "Recurrence"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azureloganalyticsdatacollector": {
                    "connectionId": "/subscriptions/d3d4f720-c50c-4a63-baca-ee244a68f/resourceGroups/boon-rg/providers/Microsoft.Web/connections/azureloganalyticsdatacollector",
                    "connectionName": "azureloganalyticsdatacollector",
                    "id": "/subscriptions/d3d4f720-c50c-4a63-baca-ee2744a68f/providers/Microsoft.Web/locations/southeastasia/managedApis/azureloganalyticsdatacollector"
                }
            }
        }
    }
}
